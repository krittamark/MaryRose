<!DOCTYPE html>
<html lang="en">

<head>
	<meta charset="UTF-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=0">
	<title>Mary Rose</title>
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">
	<link rel="stylesheet" href="/css/screenClientNew.css">
	<style>
		body {
			/* background: url('/images/NewClient.jpg');
			background-size: cover; */
		}
	</style>
</head>

<body>
	<div class="centerScore">
		<div class="TeamA TeamWrapper " id="A-Main">
			<div class="score">
				<div class="scorebox animate__animated animate__fadeIn"></div>
				<div class="scorebox animate__animated animate__fadeIn"></div>
			</div>
			<div class="arrow">
				<img src="/images/RedLogo.svg" class="Logo animate__animated animate__fadeInRight">
				<img src="/images/RedName.svg" class="Name animate__animated animate__fadeInRight">
			</div>
			<div class="content animate__animated animate__fadeInDown">
				<span><img class="logo" id="A-Logo" src="/uploads/LogoA.png"></span>
				<span class="name" id="A-Name"></span>
			</div>
		</div>

		<div class="TeamB TeamWrapper animate__animated" id="B-Main">
			<div class="score">
				<div class="scorebox animate__animated animate__fadeIn"></div>
				<div class="scorebox animate__animated animate__fadeIn"></div>
			</div>
			<div class="arrow">
				<img src="/images/BlueLogo.svg" class="Logo animate__animated animate__fadeInRight">
				<img src="/images/BlueName.svg" class="Name animate__animated animate__fadeInRight">
			</div>
			<div class="content animate__animated animate__fadeInDown">
				<span><img class="logo" id="B-Logo" src="/uploads/LogoB.png"></span>
				<span class="name" id="B-Name"></span>
			</div>
		</div>
	</div>
	<div class="sponsorSection"></div>
</body>
<script src="/js/axios.min.js"></script>
<script src="/js/socket.io.min.js"></script>
<script>
	let memory = [];
	const socket = io();
	socket.on('syncData', data => {
		document.getElementById('A-Name').innerText = data.TeamA.Name;
		document.getElementById('B-Name').innerText = data.TeamB.Name;
		

		document.querySelector('.TeamA > .score').childNodes.forEach((element, index) => {
			element.className = 'scorebox animate__animated animate__fadeIn';
		});
		document.querySelector('.TeamB > .score').childNodes.forEach((element, index) => {
			element.className = 'scorebox animate__animated animate__fadeIn';
		});
		switch (data.TeamA.Score) {
			case 0:
				document.querySelector('.TeamA > .score').childNodes.forEach((element, index) => {
					element.className = 'scorebox animate__animated animate__fadeIn';
				});
				break;
			case 1:
				document.querySelector('.TeamA > .score').childNodes.forEach((element, index) => {
					if (index == 1) {
						element.className = 'scorebox active animate__animated animate__fadeIn';
					}
				});
				break;
				
			default:
				document.querySelector('.TeamA > .score').childNodes.forEach((element, index) => {
					element.className = 'scorebox active animate__animated animate__fadeIn';
				});
				break;
				switch (data.TeamA.Score) {
			case 0:
				
				break;
			case 1:
				document.querySelector('.TeamA > .score').childNodes.forEach((element, index) => {
					if (index == 1) {
						element.className = 'scorebox active animate__animated animate__fadeIn';
					}
				});
				break;
				
			default:
				document.querySelector('.TeamA > .score').childNodes.forEach((element, index) => {
					element.className = 'scorebox active animate__animated animate__fadeIn';
				});
				break;
		}}

		switch (data.TeamB.Score) {
			case 0:
				document.querySelector('.TeamA > .score').childNodes.forEach((element, index) => {
					element.className = 'scorebox animate__animated animate__fadeIn';
				});
				break;
			case 1:
				document.querySelector('.TeamB > .score').childNodes.forEach((element, index) => {
					if (index == 1) {
						element.className = 'scorebox active animate__animated animate__fadeIn';
					}
				});
				break;
				
			default:
				document.querySelector('.TeamB > .score').childNodes.forEach((element, index) => {
					element.className = 'scorebox active animate__animated animate__fadeIn';
				});
				break;
		}
		
	});

	socket.on('element', message => {
		switch (message.action) {
			case "hideBar":
				document.getElementById('A-Main').className = 'TeamA TeamWrapper animate__animated';
				document.getElementById('A-Main').classList.add('animate__fadeOutUp')
				document.getElementById('B-Main').className = 'TeamB TeamWrapper animate__animated';
				document.getElementById('B-Main').classList.add('animate__fadeOutUp')
				break;

			case "showBar":
				document.getElementById('A-Logo').src = `/uploads/LogoA.png?${new Date().getTime()}`;
				document.getElementById('B-Logo').src = `/uploads/LogoB.png?${new Date().getTime()}`;
				document.getElementById('A-Main').className = 'TeamA TeamWrapper animate__animated';
				document.getElementById('A-Main').classList.add('animate__fadeInDown')
				document.getElementById('B-Main').className = 'TeamB TeamWrapper animate__animated';
				document.getElementById('B-Main').classList.add('animate__fadeInDown');
				document.querySelectorAll('.content').forEach(element => {
					element.className = 'content animate__animated';
					setTimeout(() => {
						element.classList.add('animate__fadeInDown');
					}, 100);
				});
				break;

			case "hideSpon":
				document.querySelector('.sponsorSection').className = 'sponsorSection animate__animated animate__fadeOutRight';
				break;
			case "showSpon":
				document.querySelector('.sponsorSection').className = 'sponsorSection animate__animated animate__fadeInRight';
				break;

			case "hideScore":
				document.querySelectorAll('.score').forEach(element => {
					element.className = 'score animate__animated animate__fadeOutUp';
				});
				break;
			case "showScore":
				document.querySelectorAll('.score').forEach(element => {
					element.className = 'score animate__animated animate__fadeInDown';
				});
				break;

			default:
				break;
		}
	})
</script>
<script>

	axios.get('/api/SyncData')
		.then(res => {


			res.data.Sponsors.forEach((element, index) => {

				const parent = document.querySelector('.sponsorSection');

				const img = document.createElement('img');
				img.src = element.Logo.src;
				img.classList.add('sponsor-item', 'animate__animated');

				if (index == 0) {
					img.classList.a = img.classList.add('animate__fadeInRight');
					parent.append(img);
				} else {
					img.style = 'display: none';
					parent.append(img);
				}
			});
		})

	let currentSponsor = 0;

	function initSponsor() {
		const sponsorList = document.querySelectorAll('.sponsor-item');
		let prevSponsor = currentSponsor;
		if (sponsorList.length === currentSponsor + 1) {
			currentSponsor = 0;
		} else {
			currentSponsor++;
		}
		showSponsor(currentSponsor, prevSponsor);
	}

	function showSponsor(currentSponsor, prevSponsor) {
		const sponsorList = document.querySelectorAll('.sponsor-item');
		sponsorList[prevSponsor].classList.remove('animate__fadeInRight');
		sponsorList[prevSponsor].classList.add('animate__fadeOutRight');
		setTimeout(() => {
			sponsorList[prevSponsor].classList.remove('animate__fadeOutRight');
			sponsorList[currentSponsor].style = 'display: block;';
			sponsorList[currentSponsor].classList.add('animate__fadeInRight');
			sponsorList[prevSponsor].style = 'display: none;';
		}, 1000);
	}

	setTimeout(() => {
		setInterval(() => {
			initSponsor()
		}, 6000);
	}, 100);
</script>

</html>